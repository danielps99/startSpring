services:
  start-spring-api:
    build:
      context: ./
      dockerfile: ${DOCKERFILE:-Dockerfile}
    container_name: start-spring-api
    image: bdws/start-spring-api:1.0
    ports:
      - "8080:8080"
      - "5005:5005"
    volumes:
      - promtail_log:/deployjava/logs
    depends_on:
      start-spring-db:
        condition: service_healthy
    environment:
      - ADDITIONAL_OPTS=-agentlib:jdwp=transport=dt_socket,server=y,suspend=n,address=*:5005 -Xmx256m -Xms128m -XX:MaxMetaspaceSize=128m
      - PROFILE=devdocker

  start-spring-db:
    container_name: start-spring-db
    image: mysql:8.0
    restart: unless-stopped
    environment:
      - MYSQL_DATABASE=startSpringDb
      - MYSQL_ROOT_PASSWORD=root
      - MYSQL_USER=developer
      - MYSQL_PASSWORD=freeaccess
    ports:
      - "3306:3306"
    volumes:
      - ./create-database.sql:/docker-entrypoint-initdb.d/create-database.sql
      - dbdata:/var/lib/mysql
    healthcheck:
      test: mysqladmin ping -h 127.0.0.1 -u $$MYSQL_USER --password=$$MYSQL_PASSWORD
      start_period: 2s
      interval: 5s
      timeout: 5s
      retries: 5

  prometheus:
    image: prom/prometheus:v2.35.0
    container_name: prometheus
    restart: unless-stopped
    ports:
      - "9090:9090"
    volumes:
      - ./observability/prometheus_config.yaml:/etc/prometheus/prometheus_config.yaml
    command:
      - "--config.file=/etc/prometheus/prometheus_config.yaml"

  grafana:
    image: grafana/grafana-oss:11.1.5
    container_name: grafana
    restart: unless-stopped
    ports:
      - "3000:3000"
    user: root
    volumes:
      - ./observability/grafana/datasources:/etc/grafana/provisioning/datasources
      - ./observability/grafana/dashboards:/etc/grafana/provisioning/dashboards
    environment:
      - GF_DEFAULT_APP_MODE=development
      - GF_LOG_LEVEL=debug
      - GF_AUTH_ANONYMOUS_ORG_ROLE=Admin # grants admin role to anonymous access. Do not do this in real environment
      - GF_AUTH_ANONYMOUS_ENABLED=true # removes login 1/2. Do not do this in real environment
      - GF_AUTH_BASIC_ENABLED=false # removes login 2/2. Do not do this in real environment
    depends_on:
      - prometheus
      - loki

  loki:
    image: grafana/loki:2.9.0
    container_name: loki
    ports:
      - "3100:3100"
    volumes:
      - ./observability/loki-config.yaml:/etc/loki/loki-config.yaml
    command: -config.file=/etc/loki/loki-config.yaml

  promtail:
    image: grafana/promtail:2.0.0
    container_name: promtail
    ports:
      - "9080:9080"
    volumes:
      - ./observability/promtail_config.yml:/etc/promtail/promtail_config.yml
      - promtail_log:/var/log
    command: -config.file=/etc/promtail/promtail_config.yml
    depends_on:
      - loki
#
#  keycloak:
#    image: keycloak/keycloak:25.0
#    container_name: keycloak
#    ports:
#      - "8081:8080"

  keycloak_web:
    image: quay.io/keycloak/keycloak:23.0.7
    container_name: keycloak_web
    environment:
      KC_DB: mysql
      KC_DB_URL: jdbc:mysql://start-spring-db:3306/keycloak_db
#      KC_DB_URL: jdbc:mysql://start-spring-db:3306/database1
#      KC_DB_URL: jdbc:mysql://start-spring-db:3306/meu_schema?createDatabaseIfNotExist=true&characterEncoding=UTF-8&rewriteBatchedStatements=true&allowPublicKeyRetrieval=true&useSSL=false
      KC_DB_USERNAME: developer
      KC_DB_PASSWORD: freeaccess

      KC_HOSTNAME: localhost
      KC_HOSTNAME_PORT: 8081
      KC_HOSTNAME_STRICT: false
      KC_HOSTNAME_STRICT_HTTPS: false

      KC_LOG_LEVEL: info
      KC_METRICS_ENABLED: true
      KC_HEALTH_ENABLED: true
      KEYCLOAK_ADMIN: admin
      KEYCLOAK_ADMIN_PASSWORD: admin
    command: start-dev
    depends_on:
      - start-spring-db
    ports:
      - 8081:8080
#
#  keycloakdb:
#    image: postgres:15
#    volumes:
#      - postgres_data:/var/lib/postgresql/data
#    environment:
#      POSTGRES_DB: keycloak
#      POSTGRES_USER: keycloak
#      POSTGRES_PASSWORD: password

volumes:
  promtail_log:
    name: promtail_log
  dbdata:
    driver: local